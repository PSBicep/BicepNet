name: "Test Linux"

on:
  workflow_call:

runs:
  using: 'composite'
  steps:
  - uses: actions/checkout@v3
    with:
      ref: ${{ github.head_ref }}
      fetch-depth: 0

  - name: Update PowerShell from LTS
    shell: pwsh
    run: |
      # Most of the code is from https://aka.ms/install-powershell.ps1 but adapted for GITHUB_PATH
      $Destination = "~/.powershell"
      if (-not (Test-Path -Path $Destination)) { New-Item -ItemType Directory -Path $Destination }

      Invoke-Expression "& { $(irm https://aka.ms/install-powershell.ps1) } -Destination $Destination"
      $TargetPath = Join-Path -Path $Destination -ChildPath "pwsh"
      $Symlink = "/usr/bin/pwsh"

      $Uid = id -u
      if ($Uid -ne "0") { $SUDO = "sudo" } else { $SUDO = "" }
      # Make symbolic link point to installed path
      & $SUDO ln -fs $TargetPath $Symlink

      if ($LASTEXITCODE -ne 0) { throw "Could not add to GITHUB_PATH: failed to make '$Symlink' point to '$TargetPath'." }

  # - name: Set PSModulePath
  #   shell: pwsh
  #   run: |
  #     $PSModulePath = @(
  #       [System.IO.Path]::Combine($Env:GITHUB_WORKSPACE, 'output', 'RequiredModules'),
  #       $Env:PSModulePath
  #     ) -join  [System.IO.Path]::PathSeparator
  #     "PSModulePath=$PSModulePath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

  - name: Download Build Artifact
    uses: actions/download-artifact@v3
    with:
      name: ${{ env.buildArtifactName }}
      path: ${{ env.buildFolderName }}

  - name: Run Tests
    shell: pwsh
    run: ./build.ps1 -tasks test

  - name: Publish Test Artifact
    uses: actions/upload-artifact@v3
    with:
      path: ${{ env.buildFolderName }}/${{ env.testResultFolderName }}/
      name: CodeCoverageLinux
    if: success() || failure()
